[{"path":"https://ahomoudi.github.io/AquaFortR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ahmed Homoudi. Author, maintainer.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Homoudi (2025). AquaFortR: Streamlining Atmospheric Science, Oceanography, Climate, Water Research Fortran-accelerated R. R package version 1.0.0, https://ahomoudi.github.io/AquaFortR.","code":"@Manual{,   title = {AquaFortR: Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R},   author = {Ahmed Homoudi},   year = {2025},   note = {R package version 1.0.0},   url = {https://ahomoudi.github.io/AquaFortR}, }"},{"path":"https://ahomoudi.github.io/AquaFortR/index.html","id":"aquafortr","dir":"","previous_headings":"","what":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","title":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","text":"project’s repository structured follows: QuartoBook RPackage AquaFortR_Swirl","code":""},{"path":[]},{"path":"https://ahomoudi.github.io/AquaFortR/index.html","id":"package","dir":"","previous_headings":"Installation & Materials","what":"Package","title":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","text":"install AquaFortR package, please use:","code":"remotes::install_github(\"ahomoudi/AquaFortR\", subdir = \"RPackage\")"},{"path":"https://ahomoudi.github.io/AquaFortR/index.html","id":"swirl","dir":"","previous_headings":"Installation & Materials","what":"Swirl","title":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","text":"install AquaFortR Swirl Course, please download compressed course use code .","code":"swirl::install_course_zip(\"path/to/AquaFortR_Swirl.zip\")"},{"path":"https://ahomoudi.github.io/AquaFortR/index.html","id":"book","dir":"","previous_headings":"Installation & Materials","what":"Book","title":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","text":"Materials chapter 2 available . Please, revise path shared libraries files R-Fortran functions.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","text":"work funded German Research Foundation (DFG) project NFDI4Earth (DFG project . 460036893, https://www.nfdi4earth.de/) within German National Research Data Infrastructure (NFDI, https://www.nfdi.de/).","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","text":"Appreciation extended Dr. Klemens Barfus providing invaluable Fortran routines estimate CAPE.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R","text":"book licensed Creative Commons Attribution-NonCommercial 4.0 International (CC -NC 4.0) License (https://creativecommons.org/licenses/-nc/4.0/).","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/AquaFortR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"AquaFortR: Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R — AquaFortR-package","title":"AquaFortR: Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R — AquaFortR-package","text":"AquaFortR educational package students researchers Atmospheric Science, Oceanography, Climate, Water Research. AquaFortR aims show using simple Fortran scripts can fulfil need speed R, especially considering data sets fields large discretised arrays representing earth system processes. Fortran one fastest programming languages number crunching, fastest, multidimensional arrays core part Fortran.","code":""},{"path":[]},{"path":"https://ahomoudi.github.io/AquaFortR/reference/AquaFortR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AquaFortR: Streamlining Atmospheric Science, Oceanography, Climate, and Water Research with Fortran-accelerated R — AquaFortR-package","text":"Maintainer: Ahmed Homoudi ahmed.homoudi@tu-dresden.de (ORCID)","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_f.html","id":null,"dir":"Reference","previous_headings":"","what":"CAPE using Fortran — cape_f","title":"CAPE using Fortran — cape_f","text":"function calculates Convective Available Potential  Energy (CAPE) using R. returns vector CAPE, convective inhibition  (CIN), pressure lifted condensation level (LCL),level free  convection (LFC).","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CAPE using Fortran — cape_f","text":"","code":"cape_f(   t_parcel,   dwpt_parcel,   mr_parcel,   p_profile,   t_profile,   mr_profile,   vtc = TRUE )"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CAPE using Fortran — cape_f","text":"t_parcel Parcel temperature [K]. dwpt_parcel Parcel dew point temperature [K]. mr_parcel Parcel mixing ratio [kg/kg]. p_profile Pressure profile sounding modelling [hPa]. t_profile Temperature profile sounding modelling [K]. mr_profile Mixing ratio profile sounding modelling [kg/kg]. vtc logical refers virtual temperature correction due Doswell Rasmussen (1994).","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CAPE using Fortran — cape_f","text":"vector containing CAPE, CIN, p_LCL, p_LFC","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_f.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CAPE using Fortran — cape_f","text":"Klemens Barfus (Original Fortran), Ahmed Homoudi (Integration R)","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CAPE using Fortran — cape_f","text":"","code":"data(\"radiosonde\") t_profile <- radiosonde$temp + 273.15 # K dwpt_profile <- radiosonde$dpt + 273.15 # K p_profile <- radiosonde$pressure # hPa # Mixing ratio mr_profile <- mixing_ratio_from_dewpoint(dwpt_profile, p_profile) cape_f(t_profile[1], dwpt_profile[1], mr_profile[1],   p_profile, t_profile, mr_profile,   vtc = TRUE ) #>       CAPE        CIN      p_LCL      p_LFC  #> 6439.63999   25.91901  915.00000  915.00000"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_r.html","id":null,"dir":"Reference","previous_headings":"","what":"CAPE using R — cape_r","title":"CAPE using R — cape_r","text":"function calculates Convective Available Potential  Energy (CAPE) using R. returns vector CAPE, convective inhibition  (CIN), pressure lifted condensation level (LCL),level free  convection (LFC).","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CAPE using R — cape_r","text":"","code":"cape_r(   t_parcel,   dwpt_parcel,   mr_parcel,   p_profile,   t_profile,   mr_profile,   vtc = TRUE )"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CAPE using R — cape_r","text":"t_parcel Parcel temperature [K]. dwpt_parcel Parcel dew point temperature [K]. mr_parcel Parcel mixing ratio [kg/kg]. p_profile Pressure profile sounding modelling [hPa]. t_profile Temperature profile sounding modelling [K]. mr_profile Mixing ratio profile sounding modelling [kg/kg]. vtc logical refers virtual temperature correction due Doswell Rasmussen (1994).","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CAPE using R — cape_r","text":"vector containing CAPE, CIN, p_LCL, p_LFC","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_r.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CAPE using R — cape_r","text":"Klemens Barfus (Original Fortran), Ahmed Homoudi (Translation R)","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/cape_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CAPE using R — cape_r","text":"","code":"data(\"radiosonde\") t_profile <- radiosonde$temp + 273.15 # K dwpt_profile <- radiosonde$dpt + 273.15 # K p_profile <- radiosonde$pressure # hPa # Mixing ratio mr_profile <- mixing_ratio_from_dewpoint(dwpt_profile, p_profile) cape_r(t_profile[1], dwpt_profile[1], mr_profile[1],   p_profile, t_profile, mr_profile,   vtc = TRUE ) #>       CAPE        CIN      p_LCL      p_LFC  #> 6439.63388   25.91898  915.00000  915.00000"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_f.html","id":null,"dir":"Reference","previous_headings":"","what":"2D Convolution using Fortran. — conv2D_f","title":"2D Convolution using Fortran. — conv2D_f","text":"function calculates 2D Convolution two matrices  `` `b` using compiled Fortran subroutine.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D Convolution using Fortran. — conv2D_f","text":"","code":"conv2D_f(a, b)"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D Convolution using Fortran. — conv2D_f","text":"matrix (2D array) values. b matrix (2D array) values.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2D Convolution using Fortran. — conv2D_f","text":"matrix representing 2D cross-correlation input matrices.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_f.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"2D Convolution using Fortran. — conv2D_f","text":"Ahmed Homoudi","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D Convolution using Fortran. — conv2D_f","text":"","code":"a <- matrix(c(1, 2, 3, 4), ncol = 2) b <- matrix(c(5, 6, 7, 8), ncol = 2) conv2D_f(a, b) #>      [,1] [,2] [,3] #> [1,]    5   22   21 #> [2,]   16   60   52 #> [3,]   12   40   32"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_r.html","id":null,"dir":"Reference","previous_headings":"","what":"2D Convolution using R. — conv2D_r","title":"2D Convolution using R. — conv2D_r","text":"function calculates 2D Convolution two matrices  `` `b` using compiled Fortran subroutine.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D Convolution using R. — conv2D_r","text":"","code":"conv2D_r(a, b)"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D Convolution using R. — conv2D_r","text":"matrix (2D array) values. b matrix (2D array) values.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2D Convolution using R. — conv2D_r","text":"matrix representing 2D cross-correlation input matrices.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_r.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"2D Convolution using R. — conv2D_r","text":"Ahmed Homoudi","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/conv2D_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D Convolution using R. — conv2D_r","text":"","code":"a <- matrix(c(1, 2, 3, 4), ncol = 2) b <- matrix(c(5, 6, 7, 8), ncol = 2) conv2D_r(a, b) #>      [,1] [,2] [,3] #> [1,]    5   22   21 #> [2,]   16   60   52 #> [3,]   12   40   32"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/mixing_ratio_from_dewpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixing ratio — mixing_ratio_from_dewpoint","title":"Mixing ratio — mixing_ratio_from_dewpoint","text":"Estimation mixing ratio pressure [hPa] dewpoint temperature [K].","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/mixing_ratio_from_dewpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixing ratio — mixing_ratio_from_dewpoint","text":"","code":"mixing_ratio_from_dewpoint(dewpoint, pressure)"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/mixing_ratio_from_dewpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixing ratio — mixing_ratio_from_dewpoint","text":"dewpoint temperature [K] pressure [hPa]","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/mixing_ratio_from_dewpoint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mixing ratio — mixing_ratio_from_dewpoint","text":"Ahmed Homoudi","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/radiosonde.html","id":null,"dir":"Reference","previous_headings":"","what":"Radiosonde data — radiosonde","title":"Radiosonde data — radiosonde","text":"radiosonde example data calculate CAPE. data measured Pointe-Noire,  Republic Congo, radiosonde station 2024.02.02 12Z. radiosonde data available online University Wyoming http://weather.uwyo.edu/upperair/sounding.html/.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/radiosonde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radiosonde data — radiosonde","text":"","code":"radiosonde"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/radiosonde.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Radiosonde data — radiosonde","text":"data frame 7 columns 66 rows","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/saturation_vapour_pressure.html","id":null,"dir":"Reference","previous_headings":"","what":"Saturation vapour pressure — saturation_vapour_pressure","title":"Saturation vapour pressure — saturation_vapour_pressure","text":"Estimation Saturation vapour pressure [hPa] temperature [k].","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/saturation_vapour_pressure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saturation vapour pressure — saturation_vapour_pressure","text":"","code":"saturation_vapour_pressure(temperature, ice = FALSE)"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/saturation_vapour_pressure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saturation vapour pressure — saturation_vapour_pressure","text":"temperature [k] ice TRUE FALSE, consider ice state .","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/saturation_vapour_pressure.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Saturation vapour pressure — saturation_vapour_pressure","text":"Klemens Barfus (Original Fortran), translated R Ahmed Homoudi","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_f.html","id":null,"dir":"Reference","previous_headings":"","what":"2D cross-correlation using Fortran. — xcorr2D_f","title":"2D cross-correlation using Fortran. — xcorr2D_f","text":"function calculates 2D cross-correlation two matrices  `` `b` using compiled Fortran subroutine.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D cross-correlation using Fortran. — xcorr2D_f","text":"","code":"xcorr2D_f(a, b)"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D cross-correlation using Fortran. — xcorr2D_f","text":"matrix (2D array) values. b matrix (2D array) values.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2D cross-correlation using Fortran. — xcorr2D_f","text":"matrix representing 2D cross-correlation input matrices.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_f.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"2D cross-correlation using Fortran. — xcorr2D_f","text":"Ahmed Homoudi","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D cross-correlation using Fortran. — xcorr2D_f","text":"","code":"a <- matrix(c(1, 2, 3, 4), ncol = 2) b <- matrix(c(5, 6, 7, 8), ncol = 2) xcorr2D_f(a, b) #>      [,1] [,2] [,3] #> [1,]    8   30   18 #> [2,]   23   70   39 #> [3,]   14   38   20"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_r.html","id":null,"dir":"Reference","previous_headings":"","what":"2D cross-correlation using R. — xcorr2D_r","title":"2D cross-correlation using R. — xcorr2D_r","text":"function calculates 2D cross-correlation two matrices  `` `b` using compiled Fortran subroutine.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D cross-correlation using R. — xcorr2D_r","text":"","code":"xcorr2D_r(a, b)"},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D cross-correlation using R. — xcorr2D_r","text":"matrix (2D array) values. b matrix (2D array) values.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"2D cross-correlation using R. — xcorr2D_r","text":"matrix representing 2D cross-correlation input matrices.","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_r.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"2D cross-correlation using R. — xcorr2D_r","text":"Ahmed Homoudi","code":""},{"path":"https://ahomoudi.github.io/AquaFortR/reference/xcorr2D_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D cross-correlation using R. — xcorr2D_r","text":"","code":"a <- matrix(c(1, 2, 3, 4), ncol = 2) b <- matrix(c(5, 6, 7, 8), ncol = 2) xcorr2D_r(a, b) #>      [,1] [,2] [,3] #> [1,]    8   30   18 #> [2,]   23   70   39 #> [3,]   14   38   20"},{"path":[]}]
